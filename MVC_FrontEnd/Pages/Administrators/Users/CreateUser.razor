@page "/CreateUser"

<h5 class="mb-3" id="exampleModalLabel">Create User</h5>

<Alert @ref="alertComponent" OnNotificationResponse="HandleNotificationResponse" />

<div class="row g-2 mb-2">
	<InputComponent InputType="text" InputID="FirstName" IsDisabled="false" label="First Name" @bind-Value="userData.Firstname" />
	<InputComponent InputType="text" InputID="MiddleName" IsDisabled="false" label="Middle Name" @bind-Value="userData.Middlename" />
	<InputComponent InputType="text" InputID="LastName" IsDisabled="false" label="Last Name" @bind-Value="userData.Lastname" />
</div>

<div class="row g-2 mb-2">
	<div class="col">
		<label for="Gender" class="form-label">Gender</label>
		<select id="Gender" class="form-select" @bind="userData.Gender">
			<option value="n/a" selected disabled>-- Please Select Gender --</option>
			@if (GenderOptions != null)
			{
				foreach (var option in GenderOptions)
				{
					<option value="@option.Value">@option.Text</option>
				}
			}
		</select>
	</div>
	<InputComponent InputType="text" InputID="PhoneNumber" IsDisabled="false" label="Phone Number" @bind-Value="userData.PhoneNumber" />
	<InputComponent InputType="email" InputID="CreateEmail" IsDisabled="false" label="Email Address" @bind-Value="userData.Email" />
</div>

<hr />

<div class="row g-2 mb-2">
	<InputComponent InputType="password" InputID="CreatePassword" IsDisabled="false" label="Password" @bind-Value="userData.Password" />
	<InputComponent InputType="password" InputID="ConfirmPassword" IsDisabled="false" label="ConfirmPassword" @bind-Value="confirmPassword" />

	<div class="col">
		<label for="Position" class="form-label">Position</label>
		<select id="Position" class="form-select" @bind="userData.Role">
			<option value="n/a" selected disabled>-- Please Select Position --</option>
			@if (PositionOptions != null)
			{
				foreach (var option in PositionOptions)
				{
					<option value="@option.Value">@option.Text</option>
				}
			}
		</select>
	</div>
</div>

<div class="d-flex justify-content-end">
	<a href="/Users" type="button" class="btn btn-danger me-3" data-bs-dismiss="modal">Close</a>
	<button type="button" class="btn btn-success me-3" data-bs-dismiss="modal" @onclick="AddUser">Create</button>
</div>



@code {

	public Users userData { set; get; } = new();	

	public string? confirmPassword { get; set; }

	[Inject]
	private ComponentServices componentServices { get; set; }
	[Inject]
	private UsersServices usersServices { get; set; }

	public List<SelectOptions> GenderOptions { get; set; }
	public List<SelectOptions> PositionOptions { get; set; }

	private Alert? alertComponent;

	protected override async void OnInitialized()
	{
		GenderOptions = componentServices.GenderOptions;
		PositionOptions = componentServices.PositionOptions;
	}

	protected async Task AddUser()
	{
		bool result = await alertComponent.ShowNotification("Do you want to Add this User?", true, "success");

		await HandleNotificationResponse(result);
	}

	private async Task HandleNotificationResponse(bool response)
	{
		if (response)
		{
			if (userData.Password != confirmPassword)
			{
				await alertComponent.ShowNotification("Password Mismatch!", false, "danger");
			}
			else if (userData.Password == null)
			{
				await alertComponent.ShowNotification("Password Empty!", false, "danger");

			}
			else
			{
				bool isAdded = await usersServices.AddUsers(userData);

				if (isAdded)
				{
					await alertComponent.ShowNotification("Data inserted successfully!", false, "success");

					navManager.NavigateTo("/Users");
				}
				else
				{
					await alertComponent.ShowNotification("Failed to insert user!", false, "danger");
				}
			}
		}
	}

}
